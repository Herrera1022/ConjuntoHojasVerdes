/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author estudiantelis
 */
public class ZonasComunes extends javax.swing.JFrame {

    private DefaultTableModel modeloTabla;
    private String documentoUsuario;

    /**
     * Creates new form Propietario
     */
    public ZonasComunes(String documento) {
        initComponents();
        modeloTabla = (DefaultTableModel) tablaZonas.getModel(); // Inicializa el modelo de la tabla
        configurarTabla(); // Carga los datos al inicio
        this.documentoUsuario = documento;
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                guardarDatos(); // Método para guardar los datos
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaZonas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        asignarTurno = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tablaZonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaZonas);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 51));
        jLabel1.setText("Zonas Comunes");

        asignarTurno.setBackground(new java.awt.Color(204, 255, 204));
        asignarTurno.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        asignarTurno.setText("Asignar Turno");
        asignarTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asignarTurnoActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Atrás");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 842, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(364, 364, 364))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(asignarTurno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(152, 152, 152))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(asignarTurno)
                    .addComponent(jButton1))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void guardarDatos() {
        try (PrintWriter writer = new PrintWriter(new FileWriter("turnos_guardados.txt"))) {
            for (int i = 0; i < tablaZonas.getRowCount(); i++) {
                for (int j = 0; j < tablaZonas.getColumnCount(); j++) {
                    writer.print(tablaZonas.getValueAt(i, j));
                    if (j < tablaZonas.getColumnCount() - 1) {
                        writer.print(",");
                    }
                }
                writer.println();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void configurarTabla() {
        // Establece los títulos de las columnas
        String[] titulos = {"Horario", "Piscina", "Cancha de Padel", "Cancha de Tenis", "Teatro", "Salón de Eventos"};
        modeloTabla.setColumnIdentifiers(titulos);

        cargarDatos(); // Carga los datos al inicio
    }

    private void cargarDatosIniciales() {
        Object[][] datosIniciales = {
            {"08:00 - 10:00", "Disponible", "Disponible", "Disponible", "Disponible", "Disponible"},
            {"10:00 - 12:00", "Disponible", "Disponible", "Disponible", "Disponible", "Disponible"},
            {"12:00 - 14:00", "Disponible", "Disponible", "Disponible", "Disponible", "Disponible"},
            {"14:00 - 16:00", "Disponible", "Disponible", "Disponible", "Disponible", "Disponible"},
            {"16:00 - 18:00", "Disponible", "Disponible", "Disponible", "Disponible", "Disponible"},
            {"18:00 - 20:00", "Disponible", "Disponible", "Disponible", "Disponible", "Disponible"}
        };
        for (Object[] fila : datosIniciales) {
            modeloTabla.addRow(fila);
        }
    }

    private void cargarDatos() {
        modeloTabla.setRowCount(0);
        try (Scanner scanner = new Scanner(new File("turnos_guardados.txt"))) {
            while (scanner.hasNextLine()) {
                String[] datos = scanner.nextLine().split(",");
            }
        } catch (FileNotFoundException e) {
            cargarDatosIniciales();
        }
    }


    private void asignarTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asignarTurnoActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tablaZonas.getSelectedRow();
        int columnaSeleccionada = tablaZonas.getSelectedColumn();

        if (filaSeleccionada == -1 || columnaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona un horario y una zona para asignar el turno.");
            return;
        }

        if (columnaSeleccionada == 0) {
            JOptionPane.showMessageDialog(this, "No puedes asignar un turno en la columna de horarios.");
            return;
        }

        String estadoActual = (String) tablaZonas.getValueAt(filaSeleccionada, columnaSeleccionada);

        if ("Disponible".equals(estadoActual)) {
            tablaZonas.setValueAt("Ocupado por " + documentoUsuario, filaSeleccionada, columnaSeleccionada);
            JOptionPane.showMessageDialog(this, "Turno asignado con éxito.");
        } else {
            JOptionPane.showMessageDialog(this, "Este turno ya está ocupado.");
        }
    }//GEN-LAST:event_asignarTurnoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Propietario propietario = new Propietario();
        propietario.setVisible(true);
        propietario.pack();
        propietario.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton asignarTurno;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaZonas;
    // End of variables declaration//GEN-END:variables
}
